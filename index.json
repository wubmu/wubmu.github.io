[{"categories":null,"content":"测试下github ","date":"2021-03-21","objectID":"/demo/:1:0","tags":null,"title":"Demo","uri":"/demo/"},{"categories":null,"content":"你快出来啊 ","date":"2021-03-18","objectID":"/%E8%83%BD%E5%87%BA%E6%9D%A5%E4%B8%8D/:0:0","tags":null,"title":"能出来不","uri":"/%E8%83%BD%E5%87%BA%E6%9D%A5%E4%B8%8D/"},{"categories":null,"content":"创建IDEA项目 点击New project 找到Maven，勾选钩选Create from archetype选择模板，选择webapp模板，完成后点击next继续。 填写你自己的GroupId和ArtifactId就项目命。 选择Maven的地址 填写项目命finish就可以 运行测试下web项目。 点击 Edit Configurations 点击添加，找到 tomcat local 点击 deployment 的添加把刚刚建的项目导进来 点击ok就可以了 右上角会多出来一个 直接run运行 ","date":"2018-12-27","objectID":"/idea%E6%9E%84%E5%BB%BAmavenssm/:0:1","tags":null,"title":"IDEA构建Maven＋SSM","uri":"/idea%E6%9E%84%E5%BB%BAmavenssm/"},{"categories":null,"content":"SSM项目配置 更改pom.xml文件 \u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e \u003cproject xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"\u003e \u003cmodelVersion\u003e4.0.0\u003c/modelVersion\u003e \u003cgroupId\u003eo2o\u003c/groupId\u003e \u003cartifactId\u003eo2o\u003c/artifactId\u003e \u003cversion\u003e1.0-SNAPSHOT\u003c/version\u003e \u003cpackaging\u003ewar\u003c/packaging\u003e \u003cname\u003eo2o Maven Webapp\u003c/name\u003e \u003c!-- FIXME change it to the project's website --\u003e \u003curl\u003ehttp://www.example.com\u003c/url\u003e \u003cproperties\u003e \u003cproject.build.sourceEncoding\u003eUTF-8\u003c/project.build.sourceEncoding\u003e \u003cmaven.compiler.source\u003e1.7\u003c/maven.compiler.source\u003e \u003cmaven.compiler.target\u003e1.7\u003c/maven.compiler.target\u003e \u003c!-- 设置项目编码编码 --\u003e \u003cproject.build.sourceEncoding\u003eUTF-8\u003c/project.build.sourceEncoding\u003e \u003cproject.reporting.outputEncoding\u003eUTF-8\u003c/project.reporting.outputEncoding\u003e \u003c!-- spring版本号 --\u003e \u003cspring.version\u003e4.3.5.RELEASE\u003c/spring.version\u003e \u003c!-- mybatis版本号 --\u003e \u003cmybatis.version\u003e3.4.1\u003c/mybatis.version\u003e \u003c!-- log4j日志包版本号 --\u003e \u003cslf4j.version\u003e1.7.18\u003c/slf4j.version\u003e \u003clog4j.version\u003e1.2.17\u003c/log4j.version\u003e \u003c/properties\u003e \u003cdependencies\u003e \u003c!-- java ee --\u003e \u003cdependency\u003e \u003cgroupId\u003ejavax\u003c/groupId\u003e \u003cartifactId\u003ejavaee-api\u003c/artifactId\u003e \u003cversion\u003e7.0\u003c/version\u003e \u003c/dependency\u003e \u003c!-- Spring --\u003e \u003cdependency\u003e \u003cgroupId\u003eorg.springframework\u003c/groupId\u003e \u003cartifactId\u003espring-core\u003c/artifactId\u003e \u003cversion\u003e${spring.version}\u003c/version\u003e \u003c/dependency\u003e \u003cdependency\u003e \u003cgroupId\u003eorg.springframework\u003c/groupId\u003e \u003cartifactId\u003espring-beans\u003c/artifactId\u003e \u003cversion\u003e${spring.version}\u003c/version\u003e \u003c/dependency\u003e \u003cdependency\u003e \u003cgroupId\u003eorg.springframework\u003c/groupId\u003e \u003cartifactId\u003espring-context\u003c/artifactId\u003e \u003cversion\u003e${spring.version}\u003c/version\u003e \u003c/dependency\u003e \u003cdependency\u003e \u003cgroupId\u003eorg.springframework\u003c/groupId\u003e \u003cartifactId\u003espring-jdbc\u003c/artifactId\u003e \u003cversion\u003e${spring.version}\u003c/version\u003e \u003c/dependency\u003e \u003cdependency\u003e \u003cgroupId\u003eorg.springframework\u003c/groupId\u003e \u003cartifactId\u003espring-tx\u003c/artifactId\u003e \u003cversion\u003e${spring.version}\u003c/version\u003e \u003c/dependency\u003e \u003cdependency\u003e \u003cgroupId\u003eorg.springframework\u003c/groupId\u003e \u003cartifactId\u003espring-web\u003c/artifactId\u003e \u003cversion\u003e${spring.version}\u003c/version\u003e \u003c/dependency\u003e \u003cdependency\u003e \u003cgroupId\u003eorg.springframework\u003c/groupId\u003e \u003cartifactId\u003espring-webmvc\u003c/artifactId\u003e \u003cversion\u003e${spring.version}\u003c/version\u003e \u003c/dependency\u003e \u003cdependency\u003e \u003cgroupId\u003eorg.springframework\u003c/groupId\u003e \u003cartifactId\u003espring-test\u003c/artifactId\u003e \u003cversion\u003e${spring.version}\u003c/version\u003e \u003c/dependency\u003e \u003c!-- 添加jstl依赖 --\u003e \u003cdependency\u003e \u003cgroupId\u003ejstl\u003c/groupId\u003e \u003cartifactId\u003ejstl\u003c/artifactId\u003e \u003cversion\u003e1.2\u003c/version\u003e \u003c/dependency\u003e \u003c!-- 添加日志相关jar包 --\u003e \u003cdependency\u003e \u003cgroupId\u003elog4j\u003c/groupId\u003e \u003cartifactId\u003elog4j\u003c/artifactId\u003e \u003cversion\u003e${log4j.version}\u003c/version\u003e \u003c/dependency\u003e \u003cdependency\u003e \u003cgroupId\u003eorg.slf4j\u003c/groupId\u003e \u003cartifactId\u003eslf4j-api\u003c/artifactId\u003e \u003cversion\u003e${slf4j.version}\u003c/version\u003e \u003c/dependency\u003e \u003cdependency\u003e \u003cgroupId\u003eorg.slf4j\u003c/groupId\u003e \u003cartifactId\u003eslf4j-log4j12\u003c/artifactId\u003e \u003cversion\u003e${slf4j.version}\u003c/version\u003e \u003c/dependency\u003e \u003c!-- MyBatis --\u003e \u003cdependency\u003e \u003cgroupId\u003eorg.mybatis\u003c/groupId\u003e \u003cartifactId\u003emybatis\u003c/artifactId\u003e \u003cversion\u003e${mybatis.version}\u003c/version\u003e \u003c/dependency\u003e \u003c!-- mybatis/spring整合包 --\u003e \u003cdependency\u003e \u003cgroupId\u003eorg.mybatis\u003c/groupId\u003e \u003cartifactId\u003emybatis-spring\u003c/artifactId\u003e \u003cversion\u003e1.3.1\u003c/version\u003e \u003c/dependency\u003e \u003c!-- 数据库 --\u003e \u003cdependency\u003e \u003cgroupId\u003emysql\u003c/groupId\u003e \u003cartifactId\u003emysql-connector-java\u003c/artifactId\u003e \u003cversion\u003e5.1.41\u003c/version\u003e \u003cscope\u003eruntime\u003c/scope\u003e \u003c/dependency\u003e \u003c!-- 数据库连接池 --\u003e \u003cdependency\u003e \u003cgroupId\u003ecom.mchange\u003c/groupId\u003e \u003cartifactId\u003ec3p0\u003c/artifactId\u003e \u003cversion\u003e0.9.5.2\u003c/version\u003e \u003c/dependency\u003e \u003c!-- JSON --\u003e \u003cdependency\u003e \u003cgroupId\u003ecom.fasterxml.jackson.core\u003c/groupId\u003e \u003cartifactId\u003ejackson-databind\u003c/artifactId\u003e \u003cversion\u003e2.8.7\u003c/version\u003e \u003c/dependency\u003e \u003c/dependencies\u003e \u003cbuild\u003e \u003cfinalName\u003eo2o\u003c/finalName\u003e \u003cpluginManagement\u003e\u003c!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) --\u003e \u003cplugins\u003e \u003cplugin\u003e \u003cartifactId\u003emaven-clean-plugin\u003c/artifactId\u003e \u003cversion\u003e3.1.0\u003c/version\u003e \u003c/plugin\u003e \u003c!-- see http://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_binding","date":"2018-12-27","objectID":"/idea%E6%9E%84%E5%BB%BAmavenssm/:0:2","tags":null,"title":"IDEA构建Maven＋SSM","uri":"/idea%E6%9E%84%E5%BB%BAmavenssm/"},{"categories":null,"content":"测试代码 代码目录 实体类创建(User) @Component public class User { private int id; private String username; private String password; public int getId() { return id; } public void setId(int id) { this.id = id; } public String getUsername() { return username; } public void setUsername(String username) { this.username = username; } public String getPassword() { return password; } public void setPassword(String password) { this.password = password; } } 3 . UserDao创建(数据库层) public interface UserDao { List\u003cUser\u003e selectAllUser(); void save(User user); boolean update(User user); boolean delete(int id); User findById(int id); } 4 . UserService层创建 public interface UserService { public List\u003cUser\u003e findAll(); } 5 . UserServiceImpl @Service(\"/userService\") public class UserServiceImpl implements UserService { @Resource private UserDao userDao; @Override public List\u003cUser\u003e findAll() { return userDao.selectAllUser(); } } 6 . UserController @Controller @RequestMapping(\"/user\") public class UserController { @Resource UserService service; @RequestMapping(\"/showAll\") @ResponseBody public List\u003cUser\u003e showAll(){ System.out.println(service.findAll()); return service.findAll(); } } sql文件 create table user ( id int not null primary key, username varchar(255) null, password varchar(255) null ); 直接run运行 ","date":"2018-12-27","objectID":"/idea%E6%9E%84%E5%BB%BAmavenssm/:0:3","tags":null,"title":"IDEA构建Maven＋SSM","uri":"/idea%E6%9E%84%E5%BB%BAmavenssm/"},{"categories":null,"content":"Github项目地址","date":"2018-12-27","objectID":"/idea%E6%9E%84%E5%BB%BAmavenssm/:0:4","tags":null,"title":"IDEA构建Maven＋SSM","uri":"/idea%E6%9E%84%E5%BB%BAmavenssm/"}]